#FROM continuumio/anaconda3
FROM ubuntu:18.04
MAINTAINER Billy Taj
RUN apt-get update \
&& apt-get -y install wget \
&& apt-get -y install unzip \
&& apt-get -y install g++ \
&& apt-get -y install gcc \
&& apt-get -y install make \
&& apt-get -y install libz-dev \
&& apt-get -y install libbz2-dev \
&& apt-get -y install autoconf \
&& apt-get -y install build-essential \
&& apt-get -y install libboost-all-dev \
&& apt-get -y install flex \
&& apt-get -y install cmake \
&& apt-get -y install libncurses5-dev \
&& apt-get -y install liblzma-dev \
&& apt-get -y install perl \
&& apt-get install -y vim \
&& apt-get install -y less


#needed for Needle
RUN ln -s /bin/sed /usr/bin/sed \
&& apt-get update \
&& apt-get install libgd-dev -y \
&& apt-get clean

WORKDIR /pipeline_tools
#----------------------------------------------------
# Install AdapaterRemoval
RUN wget https://github.com/MikkelSchubert/adapterremoval/archive/v2.1.7.tar.gz -O adapterremoval.tar.gz \
&& mkdir /pipeline_tools/adapterremoval \ 
&& tar -xzvf adapterremoval.tar.gz \ 
&& rm adapterremoval.tar.gz \
&& cd adapterremoval-2.1.7 \
&& make && mv build/AdapterRemoval /pipeline_tools/adapterremoval/ \
&& cd /pipeline_tools \
&& rm -r adapterremoval-2.1.7 

#---------------------------------------
# Install Barrnap
RUN wget https://github.com/tseemann/barrnap/archive/0.8.zip -O barrnap.zip \ 
&& unzip barrnap.zip \ 
&& rm barrnap.zip | mkdir Barrnap \ 
&& mv barrnap-0.8/* /pipeline_tools/Barrnap \ 
&& cd /pipeline_tools \ 
&& rm -r barrnap-0.8
ENV PATH="${PATH}:/pipeline_tools/Barrnap/bin"



#---------------------------------------------------
# Install BLAT (pblat)
RUN apt-get -y install libssl-dev \ 
&& wget https://github.com/icebert/pblat/archive/2.0.tar.gz -O PBLAT.tar.gz | mkdir PBLAT \ 
&& tar --remove-files -xzvf PBLAT.tar.gz && rm PBLAT.tar.gz \
&& cd /pipeline_tools/pblat-2.0 \
&& make && mv pblat /pipeline_tools/PBLAT/ \
&& cd /pipeline_tools \
&& rm -r pblat-2.0

#------------------------------------------------------
# Install BWA
RUN wget https://sourceforge.net/projects/bio-bwa/files/bwa-0.7.17.tar.bz2 -O bwa.tar.bz2 \
&& mkdir BWA \
&& tar --remove-files -xjvf bwa.tar.bz2 \
&& rm bwa.tar.bz2 \
&& cd /pipeline_tools/bwa-0.7.17 \
&& make \
&& cd /pipeline_tools \
&& mv bwa-0.7.17/bwa BWA/ \
&& rm -r bwa-0.7.17


#----------------------------------------------------
# Install CD-HIT-DUP (from auxtools)
RUN wget https://github.com/weizhongli/cdhit/releases/download/V4.6.8/cd-hit-v4.6.8-2017-1208-source.tar.gz -O cdhit.tar.gz \
&& tar --remove-files -xzvf cdhit.tar.gz \
&& rm cdhit.tar.gz \
&& mkdir cdhit_dup \ 
&& cd cd-hit-v4.6.8-2017-1208/ \ 
&& make \
&& mv cd-hit-auxtools/cd-hit-dup /pipeline_tools/cdhit_dup/ \
&& cd /pipeline_tools \
&& rm -r cd-hit-v4.6.8-2017-1208



#----------------------------------------------------
# Install Centrifuge
RUN wget https://github.com/infphilo/centrifuge/archive/master.tar.gz -O centrifuge.tar.gz \
&& tar --remove-files -xzvf centrifuge.tar.gz \
&& rm centrifuge.tar.gz \ 
&& cd centrifuge-master \
&& make \
&& cd /pipeline_tools \
&& mv centrifuge-master centrifuge


#-----------------------------------------------------
# Install DIAMOND
RUN wget http://github.com/bbuchfink/diamond/releases/download/v0.9.19/diamond-linux64.tar.gz -O DIAMOND.tar.gz \
&& mkdir DIAMOND \
&& tar --remove-files -xzvf DIAMOND.tar.gz -C DIAMOND \
&& rm DIAMOND.tar.gz


#----------------------------------------------------
# Install EMBOSS
RUN mkdir EMBOSS \
&& wget ftp://emboss.open-bio.org/pub/EMBOSS/EMBOSS-6.6.0.tar.gz \
&& tar -xzvf EMBOSS-6.6.0.tar.gz \
&& cd EMBOSS-6.6.0 \
&& sh configure \
&& make \
&& cd /pipeline_tools

#------------------------------------------------------
# Install FLASH (Fast length adjustment of Short Reads)
RUN wget http://ccb.jhu.edu/software/FLASH/FLASH-1.2.11.tar.gz -O FLASH.tar.gz \
&& tar --remove-files -xzvf FLASH.tar.gz \
&& rm FLASH.tar.gz && mkdir FLASH \
&& cd FLASH-1.2.11 \
&& make \
&& mv flash /pipeline_tools/FLASH \
&& cd /pipeline_tools \
&& rm -r FLASH-1.2.11


#-------------------------------------------
# Install Infernal
RUN wget http://eddylab.org/infernal/infernal-1.1.2-linux-intel-gcc.tar.gz -O infernal.tar.gz \
&& tar --remove-files -xzvf infernal.tar.gz \
&& rm infernal.tar.gz \
&& mkdir infernal \
&& mv infernal-1.1.2-linux-intel-gcc/binaries/* infernal \
&& rm -r infernal-1.1.2-linux-intel-gcc \
&& cd /pipeline_tools

#-------------------------------------------
# Install Kaiju
RUN wget https://github.com/bioinformatics-centre/kaiju/releases/download/v1.6.2/kaiju-1.6.2-linux-x86_64.tar.gz -O kaiju.tar.gz \
&& tar --remove-files -xzvf kaiju.tar.gz \
&& rm kaiju.tar.gz \
&& mkdir kaiju \
&& mv kaiju-v1.6.2-linux-x86_64-static/bin/* kaiju/ \
&& rm -r kaiju-v1.6.2-linux-x86_64-static \
&& cd /pipeline_tools


#---------------------------------------
# Install KronaTools (for ktImportText)
# note, ktImportText is now a perl script, not a binary.  We probably need most of this, if not all of this.  No cleaning
RUN wget https://github.com/marbl/Krona/releases/download/v2.7/KronaTools-2.7.tar -O KronaTools.tar \
&& tar --remove-files -xvf KronaTools.tar \
&& rm KronaTools.tar \
&& mkdir KronaTools \
&& mv KronaTools-2.7/* KronaTools/ \
&& rm -r KronaTools-2.7 \
&& cd KronaTools \
&& perl install.pl \
&& cd /pipeline_tools

#----------------------------------------
# Install k-SLAM
RUN wget https://github.com/aindj/k-SLAM/archive/master.zip -O k_slam.zip \
&& unzip k_slam.zip \
&& rm k_slam.zip \
&& mkdir k-SLAM \
&& cd k-SLAM-master \
&& make -C build \
&& mv build/SLAM /pipeline_tools/k-SLAM/ \
&& cd /pipeline_tools \
&& rm -r k-SLAM-master




#------------------------------------------------------
# Install SAMTools
RUN wget https://sourceforge.net/projects/samtools/files/samtools/1.8/samtools-1.8.tar.bz2 -O samtools.tar.bz2 \
&& tar --remove-files -xjvf samtools.tar.bz2 \
&& rm samtools.tar.bz2 \
&& mkdir samtools \
&& cd samtools-1.8 \
&& make \
&& mv samtools /pipeline_tools/samtools \
&& cd /pipeline_tools \
&& rm -r samtools-1.8

#-------------------------------------------------------
# Install SPAdes
RUN wget http://cab.spbu.ru/files/release3.11.1/SPAdes-3.11.1-Linux.tar.gz -O SPAdes.tar.gz \
&& tar --remove-files -xzvf SPAdes.tar.gz \
&& rm SPAdes.tar.gz \
&& mkdir SPAdes \
&& mv SPAdes-3.11.1-Linux/* SPAdes \
&& rm -r SPAdes-3.11.1-Linux


#---------------------------------------------------
# Install Trimmomatic and get the adapters files
RUN wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.36.zip -O Trimmomatic.zip \
&& unzip Trimmomatic.zip \
&& rm Trimmomatic.zip \
&& mkdir Trimmomatic \
&& mv Trimmomatic-0.36/* Trimmomatic \
&& rm -r Trimmomatic-0.36


#----------------------------------------------------
# Install vsearch
RUN wget https://github.com/torognes/vsearch/archive/v2.7.1.tar.gz -O vsearch.tar.gz \
&& mkdir vsearch \
&& tar --remove-files -xzvf vsearch.tar.gz \
&& rm vsearch.tar.gz \ 
&& cd vsearch-2.7.1 \
&& sh autogen.sh \
&& sh configure \
&& make \
&& mv bin/vsearch /pipeline_tools/vsearch \
&& cd /pipeline_tools \
&& rm -r vsearch-2.7.1

#------------------------------------
# Install WEVOTE
RUN wget https://github.com/aametwally/WEVOTE/archive/master.zip -O wevote.zip \
&& unzip wevote.zip \
&& rm wevote.zip \
&& cd WEVOTE-master \
&& mkdir ../WEVOTE \
&& ./install.sh \
&& mkdir WEVOTE_db \
&& mv bin/WEVOTE ../WEVOTE \
&& mv downloadTaxonomyDB.sh ../WEVOTE \
&& mkdir ../WEVOTE/WEVOTE_db \
&& cd /pipeline_tools \
&& rm -r WEVOTE-master


#------------------------------------------------------------------------
#post-build annoyances with java
## JAVA INSTALLATION
RUN apt-get install -y openjdk-8-jre \
&& apt-get install -y openjdk-8-jdk \
&& cd /pipeline_tools


#--------------------------------------------
# Install PRIAM
RUN mkdir PRIAM_search \
&& wget http://priam.prabi.fr/utilities/PRIAM_search.jar \
&& mv PRIAM_search.jar PRIAM_search


#------------------------------------
# Install BLAST+
RUN apt-get install -y libidn11-dev \
&& wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.7.1/ncbi-blast-2.7.1+-x64-linux.tar.gz -O BLAST_p.tar.gz \
&& tar --remove-files -xzvf BLAST_p.tar.gz \
&& rm BLAST_p.tar.gz \
&& mkdir BLAST_p \
&& mv ncbi-blast-2.7.1+/bin/* BLAST_p \
&& rm -r ncbi-blast-2.7.1+



#RUN mkdir BLAST_p && mv ncbi-blast-2.7.1+-src/c++/* BLAST_p && rm -r ncbi-blast-2.7.1+-src
#WORKDIR BLAST_p
#RUN ./configure --without-boost && make 

#------------------------------------------------------------------------------------------
# Install Python3
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
RUN apt-get autoclean \
&& apt-get autoremove \
&& apt-get clean && apt-get install -y python3 \
&& apt-get install -y python3-pip \
&& pip3 install biopython \
&& pip3 install pandas  \
&& pip3 install matplotlib \
&& pip3 install seaborn \
&& pip3 install pillow \
&& pip3 install psutil

#-----------------------------------
# Add MetaGeneMark
WORKDIR /pipeline_tools
ADD https://github.com/billytaj/parkinson_int_meta_pipe/blob/develop/mgm/MetaGeneMark_linux_64.tar.gz?raw=true /pipeline_tools
RUN mkdir mgm \
&& mv MetaGeneMark_linux_64.tar.gz MetaGeneMark.tar \
&& tar -xvf MetaGeneMark.tar && mv MetaGeneMark_linux_64/mgm/* /pipeline_tools/mgm \
&& chmod 755 /pipeline_tools/mgm/gmhmmp

WORKDIR /pipeline_tools
RUN wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip \
&& unzip fastqc_v0.11.9.zip \
&& chmod 755 /pipeline_tools/FastQC/fastqc \ 
&& rm fastqc_v0.11.9.zip
